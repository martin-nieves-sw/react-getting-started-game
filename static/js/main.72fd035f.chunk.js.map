{"version":3,"sources":["Controls/Controls.js","Shared/GameState.js","GameFinished/GameFinished.js","GameTimer/GameTimer.js","Shared/Utils.js","logo.svg","Stars/Stars.js","GameArea/GameArea.js","App.js","reportWebVitals.js","index.js"],"names":["Controls","props","controlStyles","i","selectedNumbers","includes","backgroundColor","invalidSelection","completedNumbers","Array","controlsAmount","fill","map","_","className","style","disabled","disableControls","onClick","onControlClicked","GameState","Object","freeze","PLAYING","WON","LOST","GameFinished","color","gameState","startNewGame","tryhardMode","GameTimer","useEffect","secondsRemaining","timeRanOut","timeout","setTimeout","setSecondsRemaining","clearTimeout","getRandomInt","min","max","Math","ceil","floor","random","Stars","stars","src","logo","alt","GameArea","useState","setGameState","setSelectedNumbers","setCompletedNumbers","setStars","setInvalidSelection","setDisableControls","setTryhardMode","borderColor","tryhard","index","newSelectedNumbers","filter","x","concat","sum","reduce","a","b","newCompletedNumbers","length","remainingValues","arr","sets","sums","j","len","candidateSet","candidateSum","push","randomSumIn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72fd035f.chunk.js","sourcesContent":["import './Controls.css';\n\nfunction Controls(props) {\n  const controlStyles = (i) => {\n    if (props.selectedNumbers.includes(i + 1))\n      return { backgroundColor: props.invalidSelection ? 'red' : 'lightblue' };\n    if (props.completedNumbers.includes(i + 1))\n      return { backgroundColor: 'lightgreen' };\n    return {};\n  }\n  return (\n    <>\n      {Array(props.controlsAmount).fill().map((_, i) =>\n        <button\n          key={i + 1}\n          className=\"Control\"\n          style={controlStyles(i)}\n          disabled={props.disableControls || props.completedNumbers.includes(i + 1)}\n          onClick={() => props.onControlClicked(i + 1)}\n        >\n          {i + 1}\n        </button>\n      )}\n    </>\n  );\n}\n\nexport default Controls;\n","export const GameState = Object.freeze({\r\n    PLAYING: 'PLAYING',\r\n    WON: 'WON',\r\n    LOST: 'LOST'\r\n});","import './GameFinished.css';\nimport { GameState } from '../Shared/GameState';\n\nfunction GameFinished(props) {\n  return (\n    <div className=\"FlexColumn\">\n      <div>\n        <h2 style={{ color: props.gameState === GameState.LOST ? 'red' : 'green' }}>\n          {props.gameState === GameState.LOST ? <>Game over, better luck next time.</> : <>Congratulations!<br />You won.</>}\n        </h2>\n      </div>\n      <div>\n        <button onClick={() => props.startNewGame(props.tryhardMode)}>\n          {props.gameState === GameState.LOST ? 'Try again' : 'Play again'}\n        </button>\n        <div></div>\n        <div className=\"TryhardButtons\">\n          {\n            props.gameState === GameState.LOST && props.tryhardMode &&\n            <>\n              <div>Too hard?</div>\n              <button onClick={() => { props.startNewGame(false) }}>\n                Normal mode\n            </button>\n            </>\n          }\n          {\n            props.gameState === GameState.WON && !props.tryhardMode &&\n            <>\n              <div>Too easy?</div>\n              <button className=\"TryhardMode\" onClick={() => { props.startNewGame(true) }}>\n                Tryhard mode\n              </button>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default GameFinished;\n","import { useEffect } from 'react';\nimport { GameState } from '../Shared/GameState';\nimport './GameTimer.css';\n\nfunction GameTimer(props) {\n\n  useEffect(() => {\n    if (props.secondsRemaining === 0)\n      return props.timeRanOut();\n    const timeout = setTimeout(() => {\n      if (props.gameState === GameState.WON)\n        return;\n      props.setSecondsRemaining(props.secondsRemaining - 1);\n    }, 1000);\n    return () => { clearTimeout(timeout) };\n  });\n\n  return (\n    <>\n      Time remaining: {props.secondsRemaining}\n    </>\n  );\n}\n\nexport default GameTimer;\n","export function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function randomSumIn(arr, max) {\r\n    const sets = [[]];\r\n    const sums = [];\r\n    for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0, len = sets.length; j < len; j++) {\r\n            const candidateSet = sets[j].concat(arr[i]);\r\n            const candidateSum = candidateSet.reduce((a, b) => a + b);\r\n            if (candidateSum <= max) {\r\n                sets.push(candidateSet);\r\n                sums.push(candidateSum);\r\n            }\r\n        }\r\n    }\r\n    return sums[getRandomInt(0, sums.length - 1)];\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './Stars.css';\nimport logo from '../logo.svg';\n\nfunction Stars(props) {\n  return (\n    <>\n      {Array(props.stars).fill().map((_, i) =>\n        <img\n          key={i + 1}\n          src={logo}\n          className=\"App-logo\"\n          alt=\"logo\"\n        />\n      )}\n    </>\n  );\n}\n\nexport default Stars;\n","import { useState } from 'react';\nimport Controls from '../Controls/Controls';\nimport GameFinished from '../GameFinished/GameFinished';\nimport GameTimer from '../GameTimer/GameTimer';\nimport { GameState } from '../Shared/GameState';\nimport { randomSumIn, getRandomInt } from '../Shared/Utils';\nimport Stars from '../Stars/Stars';\nimport './GameArea.css';\n\nfunction GameArea() {\n  const BOARD_SIZE = 9;\n  const TIMEOUT_SECONDS = 10;\n  const TRYHARD_TIMEOUT_SECONDS = 3;\n\n  const [gameState, setGameState] = useState(GameState.PLAYING);\n  const [selectedNumbers, setSelectedNumbers] = useState([]);\n  const [completedNumbers, setCompletedNumbers] = useState([]);\n  const [stars, setStars] = useState(getRandomInt(1, BOARD_SIZE));\n  const [invalidSelection, setInvalidSelection] = useState(false);\n  const [disableControls, setDisableControls] = useState(false);\n  const [secondsRemaining, setSecondsRemaining] = useState(TIMEOUT_SECONDS);\n  const [tryhardMode, setTryhardMode] = useState(false);\n\n\n  const selectedNumber = (index) => {\n    const newSelectedNumbers = selectedNumbers.includes(index) ? selectedNumbers.filter(x => x !== index) : selectedNumbers.concat(index);\n    setSelectedNumbers(newSelectedNumbers);\n    const sum = newSelectedNumbers.reduce((a, b) => a + b, 0);\n    setInvalidSelection(sum > stars);\n    if (sum === stars) {\n      setSelectedNumbers([]);\n      const newCompletedNumbers = completedNumbers.concat(newSelectedNumbers);\n      setCompletedNumbers(newCompletedNumbers);\n      // Game won\n      if (newCompletedNumbers.length === BOARD_SIZE) {\n        return setGameState(GameState.WON);\n      }\n      const remainingValues = Array(BOARD_SIZE).fill().map((x, i) => x = i + 1).filter(x => !newCompletedNumbers.includes(x))\n      setStars(randomSumIn(remainingValues, BOARD_SIZE));\n    }\n  }\n\n  const timeRanOut = () => {\n    setDisableControls(true);\n    return setGameState(GameState.LOST);\n  }\n\n  const startNewGame = (tryhard = false) => {\n    setSelectedNumbers([]);\n    setCompletedNumbers([]);\n    setStars(getRandomInt(1, BOARD_SIZE));\n    setInvalidSelection(false);\n    setDisableControls(false);\n    setGameState(GameState.PLAYING);\n    setTryhardMode(tryhard);\n    setSecondsRemaining(tryhard ? TRYHARD_TIMEOUT_SECONDS : TIMEOUT_SECONDS);\n    setTryhardMode(tryhard);\n  }\n\n  return (\n    <div>\n      <div className=\"Header\">\n        Pick 1 or more number that sums to the value of stars\n      </div>\n      <div className=\"Flex\">\n        <div className=\"GameBlock\" style={tryhardMode ? { borderColor: 'red' } : {}}>\n          {\n            gameState === GameState.PLAYING\n              ? <Stars stars={stars} />\n              : <GameFinished\n                gameState={gameState}\n                startNewGame={startNewGame}\n                tryhardMode={tryhardMode}\n                setTryhardMode={setTryhardMode}\n              />\n          }\n        </div>\n        <div className=\"GameBlock\" style={tryhardMode ? { borderColor: 'red' } : {}}>\n          <Controls\n            controlsAmount={BOARD_SIZE}\n            disableControls={disableControls}\n            onControlClicked={selectedNumber}\n            selectedNumbers={selectedNumbers}\n            completedNumbers={completedNumbers}\n            invalidSelection={invalidSelection}\n          />\n        </div>\n      </div>\n      <div className=\"Footer\">\n        <GameTimer\n          timeRanOut={timeRanOut}\n          secondsRemaining={secondsRemaining}\n          setSecondsRemaining={setSecondsRemaining}\n          gameState={gameState}\n        />\n      </div>\n    </div >\n  );\n}\n\nexport default GameArea;\n","import './App.css';\nimport GameArea from './GameArea/GameArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameArea />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}